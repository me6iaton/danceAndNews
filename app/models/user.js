// Generated by CoffeeScript 1.6.1
(function() {
  var Schema, UserSchema, authTypes, crypto, mongoose, validate, validatePresenceOf;

  validate = require('mongoose-validate');

  mongoose = require("mongoose");

  Schema = mongoose.Schema;

  crypto = require("crypto");

  authTypes = ["vkontakte", "facebook", "google"];

  UserSchema = new Schema({
    name: String,
    email: {
      type: String,
      required: true,
      unique: true,
      validate: [validate.email, 'некоректный email']
    },
    username: String,
    avatar: String,
    hashed_password: String,
    salt: String,
    group: [
      {
        _id: Schema.Types.ObjectId,
        name: String
      }
    ],
    vkontakte: {},
    google: {},
    facebook: {}
  });

  UserSchema.virtual("password").set(function(password) {
    this._password = password;
    this.salt = this.makeSalt();
    return this.hashed_password = this.encryptPassword(password);
  }).get(function() {
    return this._password;
  });

  validatePresenceOf = function(value) {
    return value && value.length;
  };

  UserSchema.method("authenticate", function(plainText) {
    return this.encryptPassword(plainText) === this.hashed_password;
  });

  UserSchema.method("makeSalt", function() {
    return Math.round(new Date().valueOf() * Math.random()) + "";
  });

  UserSchema.method("encryptPassword", function(password) {
    if (!password) {
      return "";
    }
    return crypto.createHmac("sha1", this.salt).update(password).digest("hex");
  });

  mongoose.model("User", UserSchema);

}).call(this);
